<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string></string>
	<key>connections</key>
	<dict>
		<key>0353774F-5E2A-40B1-99C2-CA759333584F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>FFBA64B9-93D6-4FDE-90F7-7AC7C0BD22F8</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>09911336-139A-4564-A3E3-40F34CCE65D2</key>
		<array/>
		<key>11BFD596-BF8A-40FB-A653-3546DE23038D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>233ED074-3B1C-4614-94A8-2921FB240D0B</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>1CAA77AD-6DD2-43D7-8000-8D71225A9F0F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>1A05E1BD-E64F-42B7-B1D3-73BA48495B33</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>233ED074-3B1C-4614-94A8-2921FB240D0B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4724B93F-B60B-4B61-987A-2D9ED236403C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>24C28F3A-3DEA-4C26-85A6-1D926CAA2A58</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>1CAA77AD-6DD2-43D7-8000-8D71225A9F0F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>264A09D9-DE34-403A-9524-C67F6525811D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>48480CA8-44F8-4EDB-A615-ED828A37C56B</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>48480CA8-44F8-4EDB-A615-ED828A37C56B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>7686C74A-A33F-49C2-8231-40F1569A481A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>62F7B958-63FD-47FF-B1C9-80874A21B052</key>
		<array/>
		<key>74440C8A-04C8-4994-9877-5709DBD21588</key>
		<array/>
		<key>7686C74A-A33F-49C2-8231-40F1569A481A</key>
		<array/>
		<key>9096F3FD-3F43-4C02-B1A9-D06915789808</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0353774F-5E2A-40B1-99C2-CA759333584F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>950395A1-A577-491F-8A8B-BEE4AAE9DBFA</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>DCB5D228-7806-4BC3-97A2-D88B6825720E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>DCB5D228-7806-4BC3-97A2-D88B6825720E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>43670695-249E-4C6B-8FB6-355F64FEC9DF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>pozafly</string>
	<key>description</key>
	<string>Open iTerm ...</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Custom iTerm2</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>paths</key>
				<array>
					<string>/Applications/iTerm.app</string>
				</array>
				<key>toggle</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.launchfiles</string>
			<key>uid</key>
			<string>48480CA8-44F8-4EDB-A615-ED828A37C56B</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>til</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Open iTerm TIL</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>264A09D9-DE34-403A-9524-C67F6525811D</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>-- Set this property to true to always open in a new window
property open_in_new_window : false

-- Handlers
on new_window()
	tell application "iTerm" to create window with default profile
end new_window

on new_tab()
	tell application "iTerm" to tell the first window to create tab with default profile
end new_tab

on call_forward()
	tell application "iTerm" to activate
end call_forward

on is_running()
	application "iTerm" is running
end is_running

on has_windows()
	if not is_running() then return false
	if windows of application "iTerm" is {} then return false
	true
end has_windows

on send_text(custom_text)
	tell application "iTerm" to tell the first window to tell current session to write text custom_text
end send_text

-- Main
on alfred_script()
	if has_windows() then
		if open_in_new_window then
			new_window()
		else
			new_tab()
		end if
	else
		-- If iTerm is not running and we tell it to create a new window, we get two
		-- One from opening the application, and the other from the command
		if is_running() then
			new_window()
		else
			call_forward()
		end if
	end if

	-- Make sure a window exists before we continue, or the write may fail
	repeat until has_windows()
		delay 0.01
	end repeat

	send_text("cd Documents/dev/TIL")
	call_forward()
end alfred_script</string>
				<key>cachescript</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>7686C74A-A33F-49C2-8231-40F1569A481A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>-1</integer>
				<key>hotmod</key>
				<integer>262144</integer>
				<key>hotstring</key>
				<string>double tap</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>09911336-139A-4564-A3E3-40F34CCE65D2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>algo</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Open iTerm algorithm-practice</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>11BFD596-BF8A-40FB-A653-3546DE23038D</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>paths</key>
				<array>
					<string>/Applications/iTerm.app</string>
				</array>
				<key>toggle</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.launchfiles</string>
			<key>uid</key>
			<string>233ED074-3B1C-4614-94A8-2921FB240D0B</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>-- Set this property to true to always open in a new window
property open_in_new_window : false

-- Handlers
on new_window()
	tell application "iTerm" to create window with default profile
end new_window

on new_tab()
	tell application "iTerm" to tell the first window to create tab with default profile
end new_tab

on call_forward()
	tell application "iTerm" to activate
end call_forward

on is_running()
	application "iTerm" is running
end is_running

on has_windows()
	if not is_running() then return false
	if windows of application "iTerm" is {} then return false
	true
end has_windows

on send_text(custom_text)
	tell application "iTerm" to tell the first window to tell current session to write text custom_text
end send_text

-- Main
on alfred_script()
	if has_windows() then
		if open_in_new_window then
			new_window()
		else
			new_tab()
		end if
	else
		-- If iTerm is not running and we tell it to create a new window, we get two
		-- One from opening the application, and the other from the command
		if is_running() then
			new_window()
		else
			call_forward()
		end if
	end if

	-- Make sure a window exists before we continue, or the write may fail
	repeat until has_windows()
		delay 0.01
	end repeat

	send_text("cd Documents/dev/algorithm-practice")
	call_forward()
end alfred_script</string>
				<key>cachescript</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>4724B93F-B60B-4B61-987A-2D9ED236403C</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>paths</key>
				<array>
					<string>/Applications/Obsidian.app</string>
				</array>
				<key>toggle</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.launchfiles</string>
			<key>uid</key>
			<string>BF2A23F9-F1BB-4644-8F18-3D2CCDC29BF5</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>-1</integer>
				<key>hotmod</key>
				<integer>524288</integer>
				<key>hotstring</key>
				<string>double tap</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>74440C8A-04C8-4994-9877-5709DBD21588</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>ssh</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Open iTerm SSH</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>950395A1-A577-491F-8A8B-BEE4AAE9DBFA</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>-- Set this property to true to always open in a new window
property open_in_new_window : false

-- Handlers
on new_window()
	tell application "iTerm" to create window with default profile
end new_window

on new_tab()
	tell application "iTerm" to tell the first window to create tab with default profile
end new_tab

on call_forward()
	tell application "iTerm" to activate
end call_forward

on is_running()
	application "iTerm" is running
end is_running

on has_windows()
	if not is_running() then return false
	if windows of application "iTerm" is {} then return false
	true
end has_windows

on send_text(custom_text)
	tell application "iTerm" to tell the first window to tell current session to write text custom_text
end send_text

-- Main
on alfred_script()
	if has_windows() then
		if open_in_new_window then
			new_window()
		else
			new_tab()
		end if
	else
		-- If iTerm is not running and we tell it to create a new window, we get two
		-- One from opening the application, and the other from the command
		if is_running() then
			new_window()
		else
			call_forward()
		end if
	end if

	-- Make sure a window exists before we continue, or the write may fail
	repeat until has_windows()
		delay 0.01
	end repeat

	send_text("ssh -T pozaflyGithub")
	call_forward()
end alfred_script</string>
				<key>cachescript</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>43670695-249E-4C6B-8FB6-355F64FEC9DF</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>paths</key>
				<array>
					<string>/Applications/iTerm.app</string>
				</array>
				<key>toggle</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.launchfiles</string>
			<key>uid</key>
			<string>DCB5D228-7806-4BC3-97A2-D88B6825720E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>-1</integer>
				<key>hotmod</key>
				<integer>1048576</integer>
				<key>hotstring</key>
				<string>double tap</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>62F7B958-63FD-47FF-B1C9-80874A21B052</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>paths</key>
				<array>
					<string>/Applications/Slack.app</string>
				</array>
				<key>toggle</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.launchfiles</string>
			<key>uid</key>
			<string>13A0509D-1B3C-49CC-90CB-1C4CC8AC28ED</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>paths</key>
				<array>
					<string>/Applications/iTerm.app</string>
				</array>
				<key>toggle</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.launchfiles</string>
			<key>uid</key>
			<string>0353774F-5E2A-40B1-99C2-CA759333584F</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>playground</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Open iTerm play-ground</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>9096F3FD-3F43-4C02-B1A9-D06915789808</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>-- Set this property to true to always open in a new window
property open_in_new_window : false

-- Handlers
on new_window()
	tell application "iTerm" to create window with default profile
end new_window

on new_tab()
	tell application "iTerm" to tell the first window to create tab with default profile
end new_tab

on call_forward()
	tell application "iTerm" to activate
end call_forward

on is_running()
	application "iTerm" is running
end is_running

on has_windows()
	if not is_running() then return false
	if windows of application "iTerm" is {} then return false
	true
end has_windows

on send_text(custom_text)
	tell application "iTerm" to tell the first window to tell current session to write text custom_text
end send_text

-- Main
on alfred_script()
	if has_windows() then
		if open_in_new_window then
			new_window()
		else
			new_tab()
		end if
	else
		-- If iTerm is not running and we tell it to create a new window, we get two
		-- One from opening the application, and the other from the command
		if is_running() then
			new_window()
		else
			call_forward()
		end if
	end if

	-- Make sure a window exists before we continue, or the write may fail
	repeat until has_windows()
		delay 0.01
	end repeat

	send_text("cd Documents/dev/play-ground")
	call_forward()
end alfred_script</string>
				<key>cachescript</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>FFBA64B9-93D6-4FDE-90F7-7AC7C0BD22F8</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>brup</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Open iTerm Home Brew update</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>24C28F3A-3DEA-4C26-85A6-1D926CAA2A58</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>paths</key>
				<array>
					<string>/Applications/iTerm.app</string>
				</array>
				<key>toggle</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.launchfiles</string>
			<key>uid</key>
			<string>1CAA77AD-6DD2-43D7-8000-8D71225A9F0F</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>applescript</key>
				<string>-- Set this property to true to always open in a new window
property open_in_new_window : false

-- Handlers
on new_window()
	tell application "iTerm" to create window with default profile
end new_window

on new_tab()
	tell application "iTerm" to tell the first window to create tab with default profile
end new_tab

on call_forward()
	tell application "iTerm" to activate
end call_forward

on is_running()
	application "iTerm" is running
end is_running

on has_windows()
	if not is_running() then return false
	if windows of application "iTerm" is {} then return false
	true
end has_windows

on send_text(custom_text)
	tell application "iTerm" to tell the first window to tell current session to write text custom_text
end send_text

-- Main
on alfred_script()
	if has_windows() then
		if open_in_new_window then
			new_window()
		else
			new_tab()
		end if
	else
		-- If iTerm is not running and we tell it to create a new window, we get two
		-- One from opening the application, and the other from the command
		if is_running() then
			new_window()
		else
			call_forward()
		end if
	end if

	-- Make sure a window exists before we continue, or the write may fail
	repeat until has_windows()
		delay 0.01
	end repeat

	send_text("brew update &amp;&amp; brew upgrade")
	call_forward()
end alfred_script</string>
				<key>cachescript</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.applescript</string>
			<key>uid</key>
			<string>1A05E1BD-E64F-42B7-B1D3-73BA48495B33</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>0353774F-5E2A-40B1-99C2-CA759333584F</key>
		<dict>
			<key>xpos</key>
			<real>255</real>
			<key>ypos</key>
			<real>500</real>
		</dict>
		<key>09911336-139A-4564-A3E3-40F34CCE65D2</key>
		<dict>
			<key>xpos</key>
			<real>650</real>
			<key>ypos</key>
			<real>55</real>
		</dict>
		<key>11BFD596-BF8A-40FB-A653-3546DE23038D</key>
		<dict>
			<key>xpos</key>
			<real>55</real>
			<key>ypos</key>
			<real>185</real>
		</dict>
		<key>13A0509D-1B3C-49CC-90CB-1C4CC8AC28ED</key>
		<dict>
			<key>xpos</key>
			<real>840</real>
			<key>ypos</key>
			<real>385</real>
		</dict>
		<key>1A05E1BD-E64F-42B7-B1D3-73BA48495B33</key>
		<dict>
			<key>xpos</key>
			<real>450</real>
			<key>ypos</key>
			<real>685</real>
		</dict>
		<key>1CAA77AD-6DD2-43D7-8000-8D71225A9F0F</key>
		<dict>
			<key>xpos</key>
			<real>250</real>
			<key>ypos</key>
			<real>680</real>
		</dict>
		<key>233ED074-3B1C-4614-94A8-2921FB240D0B</key>
		<dict>
			<key>xpos</key>
			<real>250</real>
			<key>ypos</key>
			<real>185</real>
		</dict>
		<key>24C28F3A-3DEA-4C26-85A6-1D926CAA2A58</key>
		<dict>
			<key>xpos</key>
			<real>55</real>
			<key>ypos</key>
			<real>680</real>
		</dict>
		<key>264A09D9-DE34-403A-9524-C67F6525811D</key>
		<dict>
			<key>xpos</key>
			<real>50</real>
			<key>ypos</key>
			<real>50</real>
		</dict>
		<key>43670695-249E-4C6B-8FB6-355F64FEC9DF</key>
		<dict>
			<key>xpos</key>
			<real>440</real>
			<key>ypos</key>
			<real>325</real>
		</dict>
		<key>4724B93F-B60B-4B61-987A-2D9ED236403C</key>
		<dict>
			<key>xpos</key>
			<real>445</real>
			<key>ypos</key>
			<real>185</real>
		</dict>
		<key>48480CA8-44F8-4EDB-A615-ED828A37C56B</key>
		<dict>
			<key>xpos</key>
			<real>245</real>
			<key>ypos</key>
			<real>50</real>
		</dict>
		<key>62F7B958-63FD-47FF-B1C9-80874A21B052</key>
		<dict>
			<key>xpos</key>
			<real>640</real>
			<key>ypos</key>
			<real>385</real>
		</dict>
		<key>74440C8A-04C8-4994-9877-5709DBD21588</key>
		<dict>
			<key>xpos</key>
			<real>645</real>
			<key>ypos</key>
			<real>225</real>
		</dict>
		<key>7686C74A-A33F-49C2-8231-40F1569A481A</key>
		<dict>
			<key>xpos</key>
			<real>445</real>
			<key>ypos</key>
			<real>55</real>
		</dict>
		<key>9096F3FD-3F43-4C02-B1A9-D06915789808</key>
		<dict>
			<key>xpos</key>
			<real>60</real>
			<key>ypos</key>
			<real>500</real>
		</dict>
		<key>950395A1-A577-491F-8A8B-BEE4AAE9DBFA</key>
		<dict>
			<key>xpos</key>
			<real>60</real>
			<key>ypos</key>
			<real>325</real>
		</dict>
		<key>BF2A23F9-F1BB-4644-8F18-3D2CCDC29BF5</key>
		<dict>
			<key>xpos</key>
			<real>860</real>
			<key>ypos</key>
			<real>220</real>
		</dict>
		<key>DCB5D228-7806-4BC3-97A2-D88B6825720E</key>
		<dict>
			<key>xpos</key>
			<real>265</real>
			<key>ypos</key>
			<real>330</real>
		</dict>
		<key>FFBA64B9-93D6-4FDE-90F7-7AC7C0BD22F8</key>
		<dict>
			<key>xpos</key>
			<real>455</real>
			<key>ypos</key>
			<real>505</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array/>
	<key>webaddress</key>
	<string></string>
</dict>
</plist>
